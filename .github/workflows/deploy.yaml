on: 
  - workflow_dispatch
    
name: Deploy to dev env

jobs:
  code-quality-check:
    name: Check code quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10.11.0+sha512.6540583f41cc5f628eb3d9773ecee802f4f9ef9923cc45b69890fb47991d4b092964694ec3a4f738a420c918a333062c8b925d312f42e4f0c263eb603551f977
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install
        run: pnpm install
      - name: Check code quality
        run: npm run code-quality:check
  build:
    name: Build source
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10.11.0+sha512.6540583f41cc5f628eb3d9773ecee802f4f9ef9923cc45b69890fb47991d4b092964694ec3a4f738a420c918a333062c8b925d312f42e4f0c263eb603551f977
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install
        run: pnpm install
      - name: Build
        run: npm run build
  test:
    name: Running unit test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10.11.0+sha512.6540583f41cc5f628eb3d9773ecee802f4f9ef9923cc45b69890fb47991d4b092964694ec3a4f738a420c918a333062c8b925d312f42e4f0c263eb603551f977
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install
        run: pnpm install
      - name: Test
        run: npm run test

  build-and-push-image:
    name: Build and push image
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: docker build . --file Dockerfile --tag ${{ github.actor }}/k8s-simple:${{ github.sha }}
      - name: Log in to registry
        run: echo "${{ secrets.DOCKER_CREDENTIAL }}" | docker login -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          docker push ${{ github.actor }}/k8s-simple:${{ github.sha }}

  update-image-tag:
    permissions:
      contents: write
    name: update image tag
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout deployment repo
        uses: actions/checkout@v4
        with:
          repository: tienpvse1/argocd-platform
      - name: Update image tag using sed
        run: |
          cd deployments
          sed -E -i'' 's#(tienpvse/k8s-simple:)[^ ]*#\1'"${{ github.sha }}"'#' values.yaml

      - name: Commit and push changes (if any)
        shell: bash
        run: |
          git config --global user.name "tienpvse1"
          git config --global user.email "${{ secrets.ACTOR_EMAIL }}"
          if [[ `git status --porcelain --untracked-files=no` ]]; then
            # Changes
            git add .
            git commit -m "update version"
            git push
          else
            # No changes
            echo "no changes to latest posts"
            exit 0
          fi
